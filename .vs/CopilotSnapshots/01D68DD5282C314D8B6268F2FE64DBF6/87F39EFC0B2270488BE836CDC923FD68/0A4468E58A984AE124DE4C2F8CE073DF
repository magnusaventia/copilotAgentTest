@page
@model ResultsModel
@{
    ViewData["Title"] = "Resultater - Norske Kommuner Quiz";
}

<section class="results-screen" role="main" aria-labelledby="results-heading">
    <h1 id="results-heading" class="results-title">Quiz fullført!</h1>
    
    <div class="score-summary" role="region" aria-labelledby="score-heading">
        <h2 id="score-heading" class="visually-hidden">Dine resultater</h2>
        <div class="final-score" aria-describedby="score-details">
            Din poengsum: @Model.Score/@Model.TotalQuestions
        </div>
        <div id="score-details" class="visually-hidden">
            Du fikk @Model.Score riktige svar av @Model.TotalQuestions mulige. 
            Det tilsvarer @(Math.Round(Model.Percentage, 1)) prosent.
        </div>
    </div>
    
    <div class="performance-summary" role="region" aria-labelledby="performance-heading">
        <h2 id="performance-heading" class="visually-hidden">Prestasjonsvurdering</h2>
        <p class="performance-text @Model.PerformanceClass" 
           aria-describedby="performance-details">
            @Model.PerformanceMessage
        </p>
        <div id="performance-details" class="visually-hidden">
            @{
                string performanceLevel = Model.Percentage switch
                {
                    >= 90 => "Utmerket prestasjon",
                    >= 70 => "God prestasjon", 
                    >= 50 => "Akseptabel prestasjon",
                    _ => "Du kan forbedre deg"
                };
            }
            @performanceLevel basert på @(Math.Round(Model.Percentage, 1)) prosent riktige svar.
        </div>
    </div>
    
    <nav class="results-buttons" 
         role="navigation" 
         aria-label="Quiz handlinger">
        <a href="/quiz" 
           class="btn btn-primary"
           role="button"
           aria-describedby="restart-description">
            🔄 Spill igjen
        </a>
        <a href="/" 
           class="btn btn-primary"
           role="button"
           aria-describedby="home-description">
            🏠 Tilbake til start
        </a>
    </nav>
    
    <div class="hidden-descriptions">
        <div id="restart-description" class="visually-hidden">
            Start en ny quiz med 12 nye tilfeldig valgte spørsmål
        </div>
        <div id="home-description" class="visually-hidden">
            Gå tilbake til hovedsiden for å starte på nytt
        </div>
    </div>
    
    @if (Model.Percentage >= 90)
    {
        <div class="achievement" role="region" aria-labelledby="achievement-heading">
            <h3 id="achievement-heading" class="visually-hidden">Prestasjon oppnådd</h3>
            <div class="achievement-badge" aria-label="Prestasjonsbadge: Kommune-ekspert">
                <span style="font-size: 3rem;">🏆</span>
                <p><strong>Kommune-ekspert!</strong></p>
                <p><small>Du har oppnådd toppresultat</small></p>
            </div>
        </div>
    }
    else if (Model.Percentage >= 70)
    {
        <div class="achievement" role="region" aria-labelledby="achievement-heading">
            <h3 id="achievement-heading" class="visually-hidden">Prestasjon oppnådd</h3>
            <div class="achievement-badge" aria-label="Prestasjonsbadge: Kommune-kjenner">
                <span style="font-size: 3rem;">🥇</span>
                <p><strong>Kommune-kjenner!</strong></p>
                <p><small>Du har god kunnskap</small></p>
            </div>
        </div>
    }
</section>

<style>
.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

.score-summary {
    margin-bottom: 2rem;
}

.performance-summary {
    margin-bottom: 3rem;
}

.achievement {
    margin-top: 3rem;
    text-align: center;
}

.achievement-badge {
    display: inline-block;
    padding: 2rem;
    background: linear-gradient(135deg, #F1C40F 0%, #F39C12 100%);
    border-radius: 20px;
    box-shadow: 0 8px 25px rgba(241, 196, 15, 0.3);
    color: white;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
}

.achievement-badge p {
    margin: 0.5rem 0;
}

.hidden-descriptions {
    position: absolute;
    left: -9999px;
}

/* Enhanced button styling for results */
.results-buttons .btn {
    gap: 0.5rem;
    font-weight: 600;
}

.results-buttons .btn:focus {
    outline: 3px solid #F39C12;
    outline-offset: 3px;
}
</style>

@section Scripts {
    <script>
        (function() {
            try {
                console.log('[Results Debug]: Starting results page JavaScript...');
                
                // Update score display for results
                var scoreDisplay = document.getElementById('scoreDisplay');
                var score = @Model.Score;
                var total = @Model.TotalQuestions;
                
                if (scoreDisplay) {
                    var scoreText = 'Poeng: ' + score + ' | Fullfort: ' + total + '/' + total;
                    scoreDisplay.textContent = scoreText;
                    console.log('[Results Debug]: Score display updated to: ' + scoreText);
                } else {
                    console.error('[Results Error]: scoreDisplay element not found!');
                }
                
                document.addEventListener('DOMContentLoaded', function() {
                    console.log('[Results Debug]: DOM loaded, setting up results page...');
                    
                    // Focus management
                    var resultsHeading = document.getElementById('results-heading');
                    if (resultsHeading) {
                        resultsHeading.focus();
                        console.log('[Results Debug]: Results heading focused');
                    }
                    
                    // Enhanced keyboard navigation for action buttons
                    var actionButtons = document.querySelectorAll('.results-buttons .btn');
                    console.log('[Results Debug]: Found ' + actionButtons.length + ' action buttons');
                    
                    actionButtons.forEach(function(button, index) {
                        button.addEventListener('keydown', function(e) {
                            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {
                                e.preventDefault();
                                var nextIndex = (index + 1) % actionButtons.length;
                                actionButtons[nextIndex].focus();
                            } else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {
                                e.preventDefault();
                                var prevIndex = (index - 1 + actionButtons.length) % actionButtons.length;
                                actionButtons[prevIndex].focus();
                            }
                        });
                    });
                    
                    console.log('[Results Debug]: Results page setup complete');
                });
                
            } catch (error) {
                console.error('[Results Error]:', error);
                // Fallback
                var scoreDisplay = document.getElementById('scoreDisplay');
                if (scoreDisplay) {
                    scoreDisplay.textContent = 'Poeng: @Model.Score | Fullfort: @Model.TotalQuestions/@Model.TotalQuestions';
                }
            }
        })();
    </script>
}
